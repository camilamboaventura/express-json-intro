{"version":3,"sources":["apis/index.js","routeComponents/auth/SignupForm.js","routeComponents/auth/Login.js","routeComponents/auth/Profile.js","routeComponents/auth/PrivateRoute.js","components/LoadingButton.js","components/ErrorAlert.js","routeComponents/projects/ProjectForm.js","routeComponents/projects/ProjectCreate.js","components/LoadingSpinner.js","routeComponents/projects/ProjectList.js","routeComponents/projects/ProjectDetail.js","routeComponents/projects/ProjectEdit.js","components/App.js","index.js"],"names":["api","axios","create","baseURL","storedUser","localStorage","getItem","loggedInUser","JSON","parse","interceptors","request","use","config","headers","Authorization","token","SignupForm","useState","email","name","password","state","setState","handleChange","event","temp","currentTarget","value","a","preventDefault","post","response","console","log","error","onSubmit","className","htmlFor","type","id","aria-describedby","onChange","Login","props","setLoggedInUser","data","user","setItem","stringify","to","Profile","useEffect","get","fetchData","_id","PrivateRoute","Component","component","rest","render","LoadingButton","disabled","role","aria-hidden","ErrorAlert","ProjectForm","handleSubmit","title","description","loading","ProjectCreate","history","useHistory","push","message","LoadingSpinner","ProjectList","projects","scope","map","project","key","ProjectDetail","useParams","createdAt","updatedAt","Date","toLocaleDateString","ProjectEdit","match","params","count","isLoadingFetch","setIsLoadingFetch","isLoadingSend","setIsLoadingSend","patch","App","parsedUser","forceRefresh","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fe78030.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Criando uma instancia \"pré-configurada\" do Axios, com a raiz do endereço do nosso servidor\nconst api = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n});\n\nconst storedUser = localStorage.getItem(\"loggedInUser\");\n\nconst loggedInUser = JSON.parse(storedUser || '\"\"');\n\napi.interceptors.request.use((config) => {\n  config.headers = {\n    Authorization: `Bearer ${loggedInUser.token}`,\n  };\n\n  return config;\n});\n\nexport default api;\n","import React, { useState, useEffect } from \"react\";\n// Instância do Axios\nimport api from \"../../apis/index\";\n\nfunction SignupForm() {\n  // 1. Onde vamos guardar as informações do form\n  const [state, setState] = useState({ email: \"\", name: \"\", password: \"\" });\n\n  // 3. Tornar o formulario controlado (handleChange)\n  function handleChange(event) {\n    const temp = { ...state };\n    temp[event.currentTarget.name] = event.currentTarget.value;\n    setState(temp);\n  }\n\n  // 4. Disparar as informações do formulario para o backend\n  async function handleSubmit(event) {\n    // Impede o funcionamento padrāo do formulario\n    event.preventDefault();\n\n    try {\n      const response = await api.post(\"/signup\", state);\n\n      console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // 2. Construir o JSX\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* Name form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormNameInput\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"name\"\n            id=\"signupFormNameInput\"\n            aria-describedby=\"emailHelp\"\n            onChange={handleChange}\n            value={state.name}\n          />\n        </div>\n\n        {/* Email form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormEmailInput\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            id=\"signupFormEmailInput\"\n            aria-describedby=\"emailHelp\"\n            onChange={handleChange}\n            value={state.email}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        {/* Password form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormPasswordInput\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            id=\"signupFormPasswordInput\"\n            onChange={handleChange}\n            value={state.password}\n          />\n        </div>\n        {/* Submit button  */}\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignupForm;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../apis\";\n\nfunction Login(props) {\n  // 1. Onde vamos guardar os dados do form (state)\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  // 2. Atualizar o state com os dados do form\n  function handleChange(event) {\n    setState({\n      ...state,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  }\n\n  // 4. Enviar a requisicāo POST para o backend\n  async function handleSubmit(event) {\n    try {\n      event.preventDefault();\n\n      const response = await api.post(\"/login\", state);\n\n      console.log(response);\n\n      props.setLoggedInUser({ ...response.data.user });\n\n      // 5. Persistir as informações do usuário no localStorage\n      localStorage.setItem(\"loggedInUser\", JSON.stringify(response.data));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  // 3. Construir o JSX\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* Email form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormEmailInput\">Email address</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"form-control\"\n            id=\"signupFormEmailInput\"\n            aria-describedby=\"emailHelp\"\n            onChange={handleChange}\n            value={state.email}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        {/* Password form field */}\n        <div className=\"form-group\">\n          <label htmlFor=\"signupFormPasswordInput\">Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"form-control\"\n            id=\"signupFormPasswordInput\"\n            onChange={handleChange}\n            value={state.password}\n          />\n        </div>\n        {/* Submit button  */}\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n        <Link to=\"/profile\">Go to Profile</Link>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport api from \"../../apis\";\n\nfunction Profile() {\n  const [state, setState] = useState({});\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await api.get(\"/profile\");\n\n        console.log(response);\n        setState({ ...response.data.user });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <p>\n        <strong>ID: </strong>\n        {state._id}\n      </p>\n      <p>\n        <strong>Name: </strong>\n        {state.name}\n      </p>\n      <p>\n        <strong>Email: </strong>\n        {state.email}\n      </p>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, user, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        console.log(user);\n        if (user._id) {\n          return <Component {...props} {...rest} loggedInUser={user} />;\n        } else {\n          return <Redirect to=\"/login\" />;\n        }\n      }}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nfunction LoadingButton() {\n  return (\n    <button className=\"btn btn-primary\" type=\"button\" disabled>\n      <span\n        className=\"spinner-border spinner-border-sm\"\n        role=\"status\"\n        aria-hidden=\"true\"\n      ></span>\n      <span className=\"pl-2\">Loading...</span>\n    </button>\n  );\n}\n\nexport default LoadingButton;\n","import React from \"react\";\n\nfunction ErrorAlert(props) {\n  return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      {props.error}\n    </div>\n  );\n}\n\nexport default ErrorAlert;\n","import React from \"react\";\n\n// Importando botāo de loading\nimport LoadingButton from \"../../components/LoadingButton\";\n\n// Importando mensagem de erro\nimport ErrorAlert from \"../../components/ErrorAlert\";\n\nfunction ProjectForm(props) {\n  const { handleSubmit, handleChange, state } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"titleProjectInput\">Title</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"titleProjectInput\"\n          name=\"title\"\n          // Tornando input controlado\n          onChange={handleChange}\n          value={state.title}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"descriptionProjectInput\">Description</label>\n        <textarea\n          className=\"form-control\"\n          id=\"descriptionProjectInput\"\n          name=\"description\"\n          // Tornando input controlado\n          onChange={handleChange}\n          value={state.description}\n        ></textarea>\n      </div>\n      {/* Renderizaçāo condicional do botāo de loading */}\n      {state.loading ? (\n        <LoadingButton />\n      ) : (\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      )}\n      {/* Renderizaçāo condicional do alerta de erro */}\n      {state.error ? <ErrorAlert error={state.error} /> : null}\n    </form>\n  );\n}\n\nexport default ProjectForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../apis/index\";\n\n// Importar componente de formulario\nimport ProjectForm from \"./ProjectForm\";\n\nfunction ProjectCreate() {\n  // Instancia do History que nos permite navegar programaticamente\n  const history = useHistory();\n\n  // Configurando o state inicial\n  const [state, setState] = useState({\n    title: \"\",\n    description: \"\",\n    loading: false,\n    error: \"\",\n  });\n\n  // Atualiza o state toda vez que o usuario digitar ou apagar algo dentro dos campos do form\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  // Dispara a requisiçāo HTTP para o backend com os dados do formulário\n  const handleSubmit = async (event) => {\n    setState({ ...state, loading: true });\n\n    try {\n      // Impedir comportamento padrāo do formulário\n      event.preventDefault();\n\n      // Disparar a requisiçāo manualmente através do React\n      const response = await api.post(\"/project\", state);\n      console.log(response);\n\n      // Cancela o estado de loading\n      setState({ ...state, loading: false });\n\n      // Navega programaticamente para a lista de projetos\n      history.push(\"/project/all\");\n    } catch (err) {\n      console.error(err);\n      setState({ ...state, loading: false, error: err.message });\n    }\n  };\n\n  return (\n    <div>\n      <h1>New Project</h1>\n      <ProjectForm\n        state={state}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  );\n}\n\nexport default ProjectCreate;\n","import React from \"react\";\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"spinner-border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../apis/\";\n\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\n// Importando mensagem de erro\nimport ErrorAlert from \"../../components/ErrorAlert\";\n\nfunction ProjectList() {\n  // Nosso state inicial é 1 array vazia, pois vamos ter uma lista (array) de projetos\n  const [state, setState] = useState({\n    projects: [],\n    loading: false,\n    error: \"\",\n  });\n\n  // Disparar a requisiçāo HTTP para buscar os dados no servidor assim que o componente for renderizado\n  useEffect(function () {\n    setState({ ...state, loading: true });\n    // Expressoes de funcao imediatamente invocadas\n    // Immediately Invoked function expression\n    (async function () {\n      try {\n        const response = await api.get(\"/project\");\n        console.log(response);\n\n        setState({ ...state, loading: false, projects: [...response.data] });\n      } catch (err) {\n        console.error(err);\n        setState({ ...state, loading: false, error: err.message });\n      }\n    })();\n  }, []);\n\n  return (\n    <div>\n      {state.loading ? (\n        <LoadingSpinner />\n      ) : (\n        <table className=\"table table-hover\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">ID</th>\n              <th scope=\"col\">Title</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {state.projects.map((project) => {\n              return (\n                <tr key={project._id}>\n                  <td>\n                    <Link to={`/project/${project._id}`}>{project._id}</Link>\n                  </td>\n                  <td>\n                    <Link to={`/project/${project._id}`}>{project.title}</Link>\n                  </td>\n                  <td>\n                    <Link\n                      className=\"btn btn-primary mr-1\"\n                      to={`/project/edit/${project._id}`}\n                    >\n                      Edit\n                    </Link>\n                    <Link\n                      className=\"btn btn-danger\"\n                      to={`/project/delete/${project._id}`}\n                    >\n                      Delete\n                    </Link>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {state.error ? <ErrorAlert error={state.error} /> : null}\n    </div>\n  );\n}\n\nexport default ProjectList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport api from \"../../apis/\";\n\nfunction ProjectDetail() {\n  const { id } = useParams();\n\n  // 1. Onde guardar as informações\n  const [state, setState] = useState({\n    _id: \"\",\n    title: \"\",\n    description: \"\",\n    createdAt: \"\",\n    updatedAt: \"\",\n  });\n\n  // 2. Obter as informações\n  useEffect(() => {\n    async function fetchData() {\n      const response = await api.get(`/project/${id}`);\n\n      console.log(response);\n      setState({ ...response.data });\n    }\n    fetchData();\n  }, [id]);\n\n  // 3. Apresentar as informações\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <h1>Project Details</h1>\n      <span>\n        <strong>ID: </strong>\n        {state._id}\n      </span>\n      <span>\n        <strong>Title: </strong>\n        {state.title}\n      </span>\n      <span>\n        <strong>Description: </strong>\n        {state.description}\n      </span>\n      <span>\n        <strong>Creation Date: </strong>\n        {new Date(state.createdAt).toLocaleDateString()}\n      </span>\n      <span>\n        <strong>Last Updated At: </strong>\n        {new Date(state.updatedAt).toLocaleDateString()}\n      </span>\n    </div>\n  );\n}\n\nexport default ProjectDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../../apis/\";\n\nimport ProjectForm from \"./ProjectForm\";\n\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\nfunction ProjectEdit(props) {\n  // Instancia do History que nos permite navegar programaticamente\n  const history = useHistory();\n\n  const { id } = props.match.params;\n\n  const [state, setState] = useState({\n    title: \"\",\n    description: \"\",\n    error: \"\",\n    count: 0,\n  });\n  const [isLoadingFetch, setIsLoadingFetch] = useState(false);\n  const [isLoadingSend, setIsLoadingSend] = useState(false);\n\n  // 0. Buscar os dados existentes deste projeto\n  useEffect(() => {\n    setIsLoadingFetch(true);\n    (async function () {\n      try {\n        const response = await api.get(`/project/${id}`);\n\n        console.log(response);\n        setIsLoadingFetch(false);\n        setState({ ...response.data });\n      } catch (err) {\n        console.error(err);\n        setIsLoadingFetch(false);\n        setState({ ...state, error: err.message });\n      }\n    })();\n  }, [id]);\n\n  // Atualiza o state toda vez que o usuario digitar ou apagar algo dentro dos campos do form\n  const handleChange = (event) => {\n    setState({\n      ...state,\n      [event.currentTarget.name]: event.currentTarget.value,\n    });\n  };\n\n  // Dispara a requisiçāo HTTP para o backend com os dados do formulário\n  const handleSubmit = async (event) => {\n    setIsLoadingSend(true);\n\n    try {\n      // Impedir comportamento padrāo do formulário\n      event.preventDefault();\n\n      // Disparar a requisiçāo manualmente através do React\n      const response = await api.patch(`/project/${id}`, state);\n      console.log(response);\n\n      // Cancela o estado de loading\n      setIsLoadingSend(false);\n\n      // Navega programaticamente para a lista de projetos\n      history.push(\"/project/all\");\n    } catch (err) {\n      console.error(err);\n      setIsLoadingSend(false);\n      setState({ ...state, error: err.message });\n    }\n  };\n\n  // 1. Popular o formulario com os dados existentes\n\n  // 2. Enviar os dados atualizados para o servidor\n\n  return (\n    <div>\n      <h1>Edit Project</h1>\n      {isLoadingFetch ? (\n        <LoadingSpinner />\n      ) : (\n        <ProjectForm\n          state={{ ...state, loading: isLoadingSend }}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default ProjectEdit;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport SignupForm from \"../routeComponents/auth/SignupForm\";\nimport Login from \"../routeComponents/auth/Login\";\nimport Profile from \"../routeComponents/auth/Profile\";\nimport PrivateRoute from \"../routeComponents/auth/PrivateRoute\";\n\nimport ProjectCreate from \"../routeComponents/projects/ProjectCreate\";\nimport ProjectList from \"../routeComponents/projects/ProjectList\";\nimport ProjectDetail from \"../routeComponents/projects/ProjectDetail\";\nimport ProjectEdit from \"../routeComponents/projects/ProjectEdit\";\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState({});\n\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"loggedInUser\");\n\n    const parsedUser = JSON.parse(storedUser || '\"\"');\n\n    setLoggedInUser({ ...parsedUser.user });\n  }, []);\n\n  return (\n    <div className=\"container mt-5\">\n      <BrowserRouter forceRefresh={true}>\n        {loggedInUser._id ? (\n          <Switch>\n            <PrivateRoute\n              path=\"/profile\"\n              component={Profile}\n              user={loggedInUser}\n            />\n            <Route exact path=\"/project/all\" component={ProjectList} />\n            <Route>\n              <Redirect to=\"/profile\" />\n            </Route>\n          </Switch>\n        ) : (\n          <Switch>\n            <Route path=\"/signup\" component={SignupForm} />\n            <Route\n              path=\"/login\"\n              render={(props) => {\n                return <Login setLoggedInUser={setLoggedInUser} {...props} />;\n              }}\n            />\n            <Route exact path=\"/project/all\" component={ProjectList} />\n            <Route exact path=\"/project/new\" component={ProjectCreate} />\n            <Route path=\"/project/edit/:id\" component={ProjectEdit} />\n            <Route path=\"/project/:id\" component={ProjectDetail} />\n          </Switch>\n        )}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}